/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/blockly";
exports.ids = ["pages/blockly"];
exports.modules = {

/***/ "./client/components/blockly/customBlocks.ts":
/*!***************************************************!*\
  !*** ./client/components/blockly/customBlocks.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var blockly_python__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! blockly/python */ \"blockly/python\");\n/* harmony import */ var blockly_python__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(blockly_python__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var blockly__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! blockly */ \"blockly\");\n/* harmony import */ var blockly__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(blockly__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var blockly_javascript__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! blockly/javascript */ \"blockly/javascript\");\n/* harmony import */ var blockly_javascript__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(blockly_javascript__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n(blockly__WEBPACK_IMPORTED_MODULE_1___default().Blocks.factory_base) = {\n    init: function() {\n        this.setDeletable(false);\n        this.setMovable(false);\n        this.setEditable(false);\n    // etc...\n    }\n};\n(blockly__WEBPACK_IMPORTED_MODULE_1___default().Blocks.move_block_right) = {\n    init () {\n        this.appendValueInput(\"moveRightBlock\").setCheck(null).appendField(new (blockly__WEBPACK_IMPORTED_MODULE_1___default().FieldLabelSerializable)(\"Move Right\"), \"rightBlock\");\n        this.setPreviousStatement(true, null);\n        this.setNextStatement(true, null);\n        this.setColour(240);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\nblockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.move_block_right = (block)=>{\n    blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.valueToCode(block, \"NAME\", blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    let code = `\r\n      rightMovement()\r\n    `;\n    return code;\n};\n(blockly__WEBPACK_IMPORTED_MODULE_1___default().Blocks.move_block_left) = {\n    init () {\n        this.appendValueInput(\"moveLeftBlock\").setCheck(null).appendField(new (blockly__WEBPACK_IMPORTED_MODULE_1___default().FieldLabelSerializable)(\"Move Left\"), \"leftBlock\");\n        this.setPreviousStatement(true, null);\n        this.setNextStatement(true, null);\n        this.setColour(240);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\nblockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.move_block_left = (block)=>{\n    blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.valueToCode(block, \"NAME\", blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.ORDER_ATOMIC);\n    // TODO: Assemble JavaScript into code variable.\n    let code = `\r\n      leftMovement()\r\n    `;\n    return code;\n};\n(blockly__WEBPACK_IMPORTED_MODULE_1___default().Blocks.move_block_up) = {\n    init () {\n        this.appendValueInput(\"moveRightUp\").setCheck(null).appendField(new (blockly__WEBPACK_IMPORTED_MODULE_1___default().FieldLabelSerializable)(\"Move Up\"), \"upBlock\");\n        this.setPreviousStatement(true, null);\n        this.setNextStatement(true, null);\n        this.setColour(240);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\nblockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.move_block_up = (block)=>{\n    blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.valueToCode(block, \"NAME\", blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.ORDER_ATOMIC);\n    // TODO: Assemble Python into code variable.\n    let code = `\r\n      upMovement()\r\n    `;\n    return code;\n};\n(blockly__WEBPACK_IMPORTED_MODULE_1___default().Blocks.move_block_down) = {\n    init () {\n        this.appendValueInput(\"moveDownBlock\").setCheck(null).appendField(new (blockly__WEBPACK_IMPORTED_MODULE_1___default().FieldLabelSerializable)(\"Move Down\"), \"downBlock\");\n        this.setPreviousStatement(true, null);\n        this.setNextStatement(true, null);\n        this.setColour(240);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\nblockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.move_block_down = (block)=>{\n    blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.valueToCode(block, \"NAME\", blockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.ORDER_ATOMIC);\n    // TODO: Assemble JavaScript into code variable.\n    let code = `\r\n      downMovement()\r\n    `;\n    return code;\n};\n(blockly__WEBPACK_IMPORTED_MODULE_1___default().Blocks.control_wait_block) = {\n    init () {\n        this.appendDummyInput().appendField(\"Wait\").appendField(new (blockly__WEBPACK_IMPORTED_MODULE_1___default().FieldTextInput)(\"1\"), \"wait_input\").appendField(\"second\");\n        this.setInputsInline(false);\n        this.setPreviousStatement(true, null);\n        this.setNextStatement(true, null);\n        this.setColour(240);\n        this.setTooltip(\"\");\n        this.setHelpUrl(\"\");\n    }\n};\nblockly_javascript__WEBPACK_IMPORTED_MODULE_2__.javascriptGenerator.control_wait_block = (block)=>{\n    let text_wait_input = block.getFieldValue(\"wait_input\");\n    // TODO: Assemble JavaScript into code variable.\n    let code = `waitForSeconds(${text_wait_input});\\n`;\n    return code;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/components/blockly/customBlocks.ts\n");

/***/ }),

/***/ "./client/components/blockly/index.tsx":
/*!*********************************************!*\
  !*** ./client/components/blockly/index.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BlocklyWorkspace\": () => (/* binding */ BlocklyWorkspace)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var blockly_msg_en_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! blockly/msg/en.js */ \"blockly/msg/en.js\");\n/* harmony import */ var blockly_msg_en_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(blockly_msg_en_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var blockly__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! blockly */ \"blockly\");\n/* harmony import */ var blockly__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(blockly__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _blockly_theme_dark__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @blockly/theme-dark */ \"@blockly/theme-dark\");\n/* harmony import */ var _blockly_theme_dark__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_blockly_theme_dark__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var blockly_javascript__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! blockly/javascript */ \"blockly/javascript\");\n/* harmony import */ var blockly_javascript__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(blockly_javascript__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var blockly_javascript_compressed__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! blockly/javascript_compressed */ \"blockly/javascript_compressed\");\n/* harmony import */ var blockly_javascript_compressed__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(blockly_javascript_compressed__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var js_interpreter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! js-interpreter */ \"js-interpreter\");\n/* harmony import */ var js_interpreter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(js_interpreter__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var client_styled_common_button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! client/styled/common/button */ \"./client/styled/common/button.ts\");\n/* harmony import */ var _customBlocks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./customBlocks */ \"./client/components/blockly/customBlocks.ts\");\n/* harmony import */ var client_components_utils_blockly_maze__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! client/components/utils/blockly/maze */ \"./client/components/utils/blockly/maze.js\");\n/* harmony import */ var client_components_utils_blockly_maze__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(client_components_utils_blockly_maze__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _toolBoxCategory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./toolBoxCategory */ \"./client/components/blockly/toolBoxCategory.ts\");\n/* harmony import */ var client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! client/definitions/blockly */ \"./client/definitions/blockly/index.ts\");\n/* harmony import */ var _utils_blockly_blockly__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/blockly/blockly */ \"./client/components/utils/blockly/blockly.ts\");\n\n\n\n\n\n\n\n\n\n// import { DIFFICULTY, HIGHLIGHT_BLOCKS, MAX_BLOCKS } from 'definitions/blockly';\n\n\n// import { moveDownBlock, moveLeftBlock, moveRightBlock, moveUpBlock, waitForSecondsBlock } from 'utils/blockly/blockly';\n\n\n\nlet stepPID;\nlet myInterpreter;\nconst BlocklyWorkspace = ()=>{\n    blockly__WEBPACK_IMPORTED_MODULE_3___default().setLocale((blockly_msg_en_js__WEBPACK_IMPORTED_MODULE_2___default()));\n    const [javascriptCode, setJavascriptCode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [workspace, setWorkspace] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isGameOver, setIsGameOver] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isCodeRunning, setIsCodeRunning] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [difficulty, setDifficulty] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.DIFFICULTY[0].DIFFICULTY_NUMBER);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let serializer = null;\n        let blocklyState = null;\n        let blocklyWorkspace = blockly__WEBPACK_IMPORTED_MODULE_3___default().inject(\"blocklyDiv\", {\n            toolbox: _toolBoxCategory__WEBPACK_IMPORTED_MODULE_11__.INITIAL_TOOLBOX_JSON,\n            theme: (_blockly_theme_dark__WEBPACK_IMPORTED_MODULE_4___default()),\n            trashcan: true,\n            move: {\n                scrollbars: {\n                    horizontal: true,\n                    vertical: true\n                },\n                drag: true,\n                wheel: true\n            },\n            zoom: {\n                controls: true,\n                wheel: true,\n                startScale: 1.0,\n                maxScale: 3,\n                minScale: 0.3,\n                scaleSpeed: 1.2,\n                pinch: true\n            },\n            maxBlocks: client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.MAX_BLOCKS.STARTING_BLOCKS\n        });\n        if (!blocklyState && !blocklyWorkspace) {\n            serializer.load(blocklyState, blocklyWorkspace);\n        }\n        serializer = new (blockly__WEBPACK_IMPORTED_MODULE_3___default().serialization.blocks.BlockSerializer)();\n        blocklyState = serializer.save(blocklyWorkspace);\n        setWorkspace(blocklyWorkspace);\n    }, []);\n    const convertCode = ()=>{\n        blockly_javascript__WEBPACK_IMPORTED_MODULE_5__.javascriptGenerator.STATEMENT_PREFIX = `${client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.HIGHLIGHT_BLOCKS.HIGHLIGHT_BLOCK}(%1);\\n`;\n        blockly_javascript__WEBPACK_IMPORTED_MODULE_5__.javascriptGenerator.addReservedWords(client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.HIGHLIGHT_BLOCKS.HIGHLIGHT_BLOCK);\n        let jsCode = blockly_javascript__WEBPACK_IMPORTED_MODULE_5__.javascriptGenerator.workspaceToCode(workspace);\n        setJavascriptCode(jsCode);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (workspace) {\n            workspace.addChangeListener(convertCode);\n        }\n    }, [\n        convertCode,\n        workspace\n    ]);\n    const initJSInterpreterApi = (interpreter, globalObject)=>{\n        // Add an API function for highlighting blocks.\n        let wrapper = (id)=>{\n            return workspace.highlightBlock(id);\n        };\n        interpreter.setProperty(globalObject, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.HIGHLIGHT_BLOCKS.HIGHLIGHT_BLOCK, interpreter.createNativeFunction(wrapper));\n        (0,_utils_blockly_blockly__WEBPACK_IMPORTED_MODULE_13__.moveRightBlock)(interpreter, globalObject);\n        (0,_utils_blockly_blockly__WEBPACK_IMPORTED_MODULE_13__.moveLeftBlock)(interpreter, globalObject);\n        (0,_utils_blockly_blockly__WEBPACK_IMPORTED_MODULE_13__.moveUpBlock)(interpreter, globalObject);\n        (0,_utils_blockly_blockly__WEBPACK_IMPORTED_MODULE_13__.moveDownBlock)(interpreter, globalObject);\n        (0,_utils_blockly_blockly__WEBPACK_IMPORTED_MODULE_13__.waitForSecondsBlock)(interpreter, globalObject);\n    };\n    const runNextStep = ()=>{\n        if (myInterpreter.step()) {\n            const wrongMove = document.getElementById(\"gameOver\");\n            const resultPopUp = document.getElementById(\"messageContainer\");\n            if (wrongMove.style.visibility !== \"visible\" && resultPopUp.style.visibility !== \"visible\") {\n                stepPID = setTimeout(runNextStep, 10);\n            } else {\n                if (resultPopUp.style.visibility !== \"visible\") {\n                    resultPopUp.style.visibility = \"visible\";\n                    setIsGameOver(true);\n                } else if (resultPopUp.style.visibility === \"visible\" && myInterpreter.step()) {\n                    setIsGameOver(true);\n                }\n                myInterpreter = null;\n            }\n        } else {\n            const resultPopUp = document.getElementById(\"messageContainer\");\n            if (resultPopUp.style.visibility !== \"visible\") {\n                setIsGameOver(true);\n                resultPopUp.style.visibility = \"visible\";\n            } else {\n                workspace.highlightBlock(null);\n            }\n            myInterpreter = null;\n            workspace.options.readOnly = false;\n        }\n    };\n    const executeCode = async ()=>{\n        workspace.options.readOnly = true;\n        workspace.options.maxBlocks = client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.MAX_BLOCKS.NO_BLOCKS;\n        setIsCodeRunning(true);\n        try {\n            myInterpreter = new (js_interpreter__WEBPACK_IMPORTED_MODULE_7___default())(javascriptCode, initJSInterpreterApi);\n            runNextStep();\n        } catch (e) {\n            workspace.options.readOnly = false;\n            setIsCodeRunning(false);\n            makeMaze();\n            handleWorkspaceCapacity();\n            alert(e);\n        }\n    };\n    const saveBlocks = ()=>{\n        if (typeof Storage !== \"undefined\") {\n            const domXml = blockly__WEBPACK_IMPORTED_MODULE_3___default().Xml.workspaceToDom(workspace);\n            const xmlText = blockly__WEBPACK_IMPORTED_MODULE_3___default().Xml.domToText(domXml);\n            localStorage.setItem(\"blocklyXml\", xmlText);\n        }\n    };\n    const loadBlocks = ()=>{\n        const xmlText = localStorage.getItem(\"blocklyXml\");\n        if (xmlText) {\n            const xml = blockly__WEBPACK_IMPORTED_MODULE_3___default().Xml.textToDom(xmlText);\n            blockly__WEBPACK_IMPORTED_MODULE_3___default().Xml.domToWorkspace(xml, workspace);\n            workspace.options.readOnly = false;\n        }\n    };\n    const hidePopUp = ()=>{\n        const clearStagePopUp = document.getElementById(\"messageContainer\");\n        clearStagePopUp.style.visibility = \"hidden\";\n        const wrongMove = document.getElementById(\"gameOver\");\n        wrongMove.style.visibility = \"hidden\";\n        workspace.options.readOnly = false;\n        handleWorkspaceCapacity();\n        setIsGameOver(false);\n        setIsCodeRunning(false);\n        makeMaze();\n    };\n    const makeMaze = ()=>{\n        window.dispatchEvent(new KeyboardEvent(\"startMaze\", {\n            keyCode: 1000\n        }));\n    };\n    const handleDifficultyChange = (event)=>{\n        setDifficulty(event?.target.value);\n        handleWorkspaceCapacity(event?.target.value);\n        makeMaze();\n    };\n    const handleWorkspaceCapacity = (difficultyValue)=>{\n        if (difficulty != client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.DIFFICULTY[0].DIFFICULTY_NUMBER && difficultyValue && difficultyValue != client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.DIFFICULTY[0].DIFFICULTY_NUMBER) {\n            workspace.options.maxBlocks = client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.MAX_BLOCKS.INFINITE_BLOCKS;\n        } else {\n            workspace.options.maxBlocks = client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.MAX_BLOCKS.STARTING_BLOCKS;\n        }\n    };\n    const stopBlocksExecution = ()=>{\n        clearTimeout(stepPID);\n        setIsCodeRunning(false);\n        workspace.options.readOnly = false;\n        makeMaze();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            height: \"100%\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"gradient\"\n            }, void 0, false, {\n                fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                lineNumber: 190,\n                columnNumber: 13\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"blockly-wrap\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"blockly-conatiner\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"blockly-button-block\",\n                                children: [\n                                    difficulty == client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.DIFFICULTY[0].DIFFICULTY_NUMBER && workspace?.options.maxBlocks != client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.MAX_BLOCKS.NO_BLOCKS && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        style: {\n                                            color: \"white\"\n                                        },\n                                        children: [\n                                            \"You have \",\n                                            workspace?.remainingCapacity(),\n                                            \" \",\n                                            workspace?.remainingCapacity() > 1 ? \"blocks\" : \"block\",\n                                            \" left\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 196,\n                                        columnNumber: 29\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(client_styled_common_button__WEBPACK_IMPORTED_MODULE_8__.DefaultButton, {\n                                        className: `${isCodeRunning || javascriptCode?.length <= 0 ? \"disabledLink\" : \"\"}`,\n                                        onClick: saveBlocks,\n                                        children: \"Save Blocks\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 198,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(client_styled_common_button__WEBPACK_IMPORTED_MODULE_8__.DefaultButton, {\n                                        className: `${isCodeRunning ? \"disabledLink\" : \"\"}`,\n                                        onClick: loadBlocks,\n                                        children: \"Load Blocks\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 201,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(client_styled_common_button__WEBPACK_IMPORTED_MODULE_8__.DefaultButton, {\n                                        className: `${!isCodeRunning ? \"disabledLink\" : \"\"}`,\n                                        onClick: stopBlocksExecution,\n                                        children: \"Stop\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 204,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(client_styled_common_button__WEBPACK_IMPORTED_MODULE_8__.DefaultButton, {\n                                        className: `${isCodeRunning || javascriptCode?.length <= 0 ? \"disabledLink\" : \"\"}`,\n                                        id: \"runButton\",\n                                        onClick: executeCode,\n                                        children: \"Play\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 207,\n                                        columnNumber: 25\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                lineNumber: 194,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                id: \"blocklyDiv\",\n                                className: \"blockly-canvas\"\n                            }, void 0, false, {\n                                fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                lineNumber: 213,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                        lineNumber: 193,\n                        columnNumber: 17\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"blockly-conatiner\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                id: \"messageContainer\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        id: \"gameOver\",\n                                        style: {\n                                            visibility: \"hidden\"\n                                        }\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 228,\n                                        columnNumber: 25\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        id: \"message\",\n                                        children: isGameOver ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            children: \"OOPS! The moves are not correct.\"\n                                        }, void 0, false, {\n                                            fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                            lineNumber: 231,\n                                            columnNumber: 33\n                                        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: \"Congratulations!\"\n                                                }, void 0, false, {\n                                                    fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                                    lineNumber: 234,\n                                                    columnNumber: 37\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    children: \"You are done.\"\n                                                }, void 0, false, {\n                                                    fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                                    lineNumber: 235,\n                                                    columnNumber: 37\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    id: \"moves\"\n                                                }, void 0, false, {\n                                                    fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                                    lineNumber: 236,\n                                                    columnNumber: 37\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true)\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 229,\n                                        columnNumber: 25\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                lineNumber: 227,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"blockly-button-block\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                    id: \"diffSelect\",\n                                    className: `maze-select ${isCodeRunning ? \"disabledLink\" : \"\"}`,\n                                    children: Object.values(client_definitions_blockly__WEBPACK_IMPORTED_MODULE_12__.DIFFICULTY).map((difficulty)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                            value: difficulty.DIFFICULTY_NUMBER,\n                                            children: difficulty.LEVEL\n                                        }, difficulty.LEVEL, false, {\n                                            fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                            lineNumber: 245,\n                                            columnNumber: 33\n                                        }, undefined))\n                                }, void 0, false, {\n                                    fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                    lineNumber: 243,\n                                    columnNumber: 25\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                lineNumber: 242,\n                                columnNumber: 21\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                id: \"view\",\n                                className: \"maze-view\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    id: \"mazeContainer\",\n                                    className: \"maze-container\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                        id: \"mazeCanvas\",\n                                        className: \"maze-canvas\"\n                                    }, void 0, false, {\n                                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                        lineNumber: 255,\n                                        columnNumber: 29\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                    lineNumber: 254,\n                                    columnNumber: 25\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                                lineNumber: 253,\n                                columnNumber: 21\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                        lineNumber: 226,\n                        columnNumber: 17\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n                lineNumber: 192,\n                columnNumber: 13\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\client\\\\components\\\\blockly\\\\index.tsx\",\n        lineNumber: 189,\n        columnNumber: 9\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/components/blockly/index.tsx\n");

/***/ }),

/***/ "./client/components/blockly/toolBoxCategory.ts":
/*!******************************************************!*\
  !*** ./client/components/blockly/toolBoxCategory.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"INITIAL_TOOLBOX_JSON\": () => (/* binding */ INITIAL_TOOLBOX_JSON)\n/* harmony export */ });\nconst INITIAL_TOOLBOX_JSON = {\n    kind: \"categoryToolbox\",\n    contents: [\n        {\n            kind: \"category\",\n            name: \"Movement\",\n            colour: 240,\n            contents: [\n                {\n                    kind: \"block\",\n                    blockxml: '  <block type=\"move_block_right\"></block>'\n                },\n                {\n                    kind: \"block\",\n                    blockxml: '  <block type=\"move_block_left\"></block>'\n                },\n                {\n                    kind: \"block\",\n                    blockxml: '  <block type=\"move_block_up\"></block>'\n                },\n                {\n                    kind: \"block\",\n                    blockxml: '  <block type=\"move_block_down\"></block>'\n                }\n            ]\n        },\n        {\n            kind: \"category\",\n            name: \"Loops\",\n            colour: 120,\n            contents: [\n                {\n                    kind: \"block\",\n                    blockxml: '<block type=\"controls_repeat_ext\">\\n' + '      <value name=\"TIMES\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">10</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\"\n                },\n                {\n                    kind: \"block\",\n                    blockxml: '    <block type=\"controls_for\">\\n' + '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' + '      <value name=\"FROM\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"TO\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">10</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"BY\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\"\n                }\n            ]\n        }\n    ]\n};\nconst INITIAL_TOOLBOX_XML = '<xml xmlns=\"http://www.w3.org/1999/xhtml\" id=\"toolbox\" style=\"display: none;\">\\n' + '  <category name=\"Logic\" colour=\"#5C81A6\">\\n' + '    <block type=\"controls_if\"></block>\\n' + '    <block type=\"logic_compare\">\\n' + '      <field name=\"OP\">EQ</field>\\n' + \"    </block>\\n\" + '    <block type=\"logic_operation\">\\n' + '      <field name=\"OP\">AND</field>\\n' + \"    </block>\\n\" + '    <block type=\"logic_negate\"></block>\\n' + '    <block type=\"logic_boolean\">\\n' + '      <field name=\"BOOL\">TRUE</field>\\n' + \"    </block>\\n\" + '    <block type=\"logic_null\"></block>\\n' + '    <block type=\"logic_ternary\"></block>\\n' + \"  </category>\\n\" + '  <category name=\"Loops\" colour=\"#5CA65C\">\\n' + '    <block type=\"controls_repeat_ext\">\\n' + '      <value name=\"TIMES\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">10</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"controls_whileUntil\">\\n' + '      <field name=\"MODE\">WHILE</field>\\n' + \"    </block>\\n\" + '    <block type=\"controls_for\">\\n' + '      <field name=\"VAR\" id=\"C(8;cYCF}~vSgkxzJ+{O\" variabletype=\"\">i</field>\\n' + '      <value name=\"FROM\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"TO\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">10</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"BY\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"controls_forEach\">\\n' + '      <field name=\"VAR\" id=\"Cg!CSk/ZJo2XQN3=VVrz\" variabletype=\"\">j</field>\\n' + \"    </block>\\n\" + '    <block type=\"controls_flow_statements\">\\n' + '      <field name=\"FLOW\">BREAK</field>\\n' + \"    </block>\\n\" + \"  </category>\\n\" + '  <category name=\"Math\" colour=\"#5C68A6\">\\n' + '    <block type=\"math_round\">\\n' + '      <field name=\"OP\">ROUND</field>\\n' + '      <value name=\"NUM\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">3.1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_number\">\\n' + '      <field name=\"NUM\">0</field>\\n' + \"    </block>\\n\" + '    <block type=\"math_single\">\\n' + '      <field name=\"OP\">ROOT</field>\\n' + '      <value name=\"NUM\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">9</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_trig\">\\n' + '      <field name=\"OP\">SIN</field>\\n' + '      <value name=\"NUM\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">45</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_constant\">\\n' + '      <field name=\"CONSTANT\">PI</field>\\n' + \"    </block>\\n\" + '    <block type=\"math_number_property\">\\n' + '      <mutation divisor_input=\"false\"></mutation>\\n' + '      <field name=\"PROPERTY\">EVEN</field>\\n' + '      <value name=\"NUMBER_TO_CHECK\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">0</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_arithmetic\">\\n' + '      <field name=\"OP\">ADD</field>\\n' + '      <value name=\"A\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"B\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_on_list\">\\n' + '      <mutation op=\"SUM\"></mutation>\\n' + '      <field name=\"OP\">SUM</field>\\n' + \"    </block>\\n\" + '    <block type=\"math_modulo\">\\n' + '      <value name=\"DIVIDEND\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">64</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"DIVISOR\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">10</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_constrain\">\\n' + '      <value name=\"VALUE\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">50</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"LOW\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"HIGH\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">100</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_random_int\">\\n' + '      <value name=\"FROM\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">1</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"TO\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">100</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"math_random_float\"></block>\\n' + \"  </category>\\n\" + '  <category name=\"Text\" colour=\"#5CA68D\">\\n' + '    <block type=\"text_charAt\">\\n' + '      <mutation at=\"true\"></mutation>\\n' + '      <field name=\"WHERE\">FROM_START</field>\\n' + '      <value name=\"VALUE\">\\n' + '        <block type=\"variables_get\">\\n' + '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' + \"        </block>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text\">\\n' + '      <field name=\"TEXT\"></field>\\n' + \"    </block>\\n\" + '    <block type=\"text_append\">\\n' + '      <field name=\"VAR\" id=\":};P,s[*|I8+L^-.EbRi\" variabletype=\"\">item</field>\\n' + '      <value name=\"TEXT\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\"></field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_length\">\\n' + '      <value name=\"VALUE\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\">abc</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_isEmpty\">\\n' + '      <value name=\"VALUE\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\"></field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_indexOf\">\\n' + '      <field name=\"END\">FIRST</field>\\n' + '      <value name=\"VALUE\">\\n' + '        <block type=\"variables_get\">\\n' + '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' + \"        </block>\\n\" + \"      </value>\\n\" + '      <value name=\"FIND\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\">abc</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_join\">\\n' + '      <mutation items=\"2\"></mutation>\\n' + \"    </block>\\n\" + '    <block type=\"text_getSubstring\">\\n' + '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' + '      <field name=\"WHERE1\">FROM_START</field>\\n' + '      <field name=\"WHERE2\">FROM_START</field>\\n' + '      <value name=\"STRING\">\\n' + '        <block type=\"variables_get\">\\n' + '          <field name=\"VAR\" id=\"q@$ZF(L?Zo/z`d{o.Bp!\" variabletype=\"\">text</field>\\n' + \"        </block>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_changeCase\">\\n' + '      <field name=\"CASE\">UPPERCASE</field>\\n' + '      <value name=\"TEXT\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\">abc</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_trim\">\\n' + '      <field name=\"MODE\">BOTH</field>\\n' + '      <value name=\"TEXT\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\">abc</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_print\">\\n' + '      <value name=\"TEXT\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\">abc</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"text_prompt_ext\">\\n' + '      <mutation type=\"TEXT\"></mutation>\\n' + '      <field name=\"TYPE\">TEXT</field>\\n' + '      <value name=\"TEXT\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\">abc</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + \"  </category>\\n\" + '  <category name=\"Lists\" colour=\"#745CA6\">\\n' + '    <block type=\"lists_indexOf\">\\n' + '      <field name=\"END\">FIRST</field>\\n' + '      <value name=\"VALUE\">\\n' + '        <block type=\"variables_get\">\\n' + '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' + \"        </block>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"0\"></mutation>\\n' + \"    </block>\\n\" + '    <block type=\"lists_repeat\">\\n' + '      <value name=\"NUM\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">5</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"lists_length\"></block>\\n' + '    <block type=\"lists_isEmpty\"></block>\\n' + '    <block type=\"lists_create_with\">\\n' + '      <mutation items=\"3\"></mutation>\\n' + \"    </block>\\n\" + '    <block type=\"lists_getIndex\">\\n' + '      <mutation statement=\"false\" at=\"true\"></mutation>\\n' + '      <field name=\"MODE\">GET</field>\\n' + '      <field name=\"WHERE\">FROM_START</field>\\n' + '      <value name=\"VALUE\">\\n' + '        <block type=\"variables_get\">\\n' + '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' + \"        </block>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"lists_setIndex\">\\n' + '      <mutation at=\"true\"></mutation>\\n' + '      <field name=\"MODE\">SET</field>\\n' + '      <field name=\"WHERE\">FROM_START</field>\\n' + '      <value name=\"LIST\">\\n' + '        <block type=\"variables_get\">\\n' + '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' + \"        </block>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"lists_getSublist\">\\n' + '      <mutation at1=\"true\" at2=\"true\"></mutation>\\n' + '      <field name=\"WHERE1\">FROM_START</field>\\n' + '      <field name=\"WHERE2\">FROM_START</field>\\n' + '      <value name=\"LIST\">\\n' + '        <block type=\"variables_get\">\\n' + '          <field name=\"VAR\" id=\"e`(L;x,.j[[XN`F33Q5.\" variabletype=\"\">list</field>\\n' + \"        </block>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"lists_split\">\\n' + '      <mutation mode=\"SPLIT\"></mutation>\\n' + '      <field name=\"MODE\">SPLIT</field>\\n' + '      <value name=\"DELIM\">\\n' + '        <shadow type=\"text\">\\n' + '          <field name=\"TEXT\">,</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"lists_sort\">\\n' + '      <field name=\"TYPE\">NUMERIC</field>\\n' + '      <field name=\"DIRECTION\">1</field>\\n' + \"    </block>\\n\" + \"  </category>\\n\" + '  <category name=\"Colour\" colour=\"#A6745C\">\\n' + '    <block type=\"colour_picker\">\\n' + '      <field name=\"COLOUR\">#ff0000</field>\\n' + \"    </block>\\n\" + '    <block type=\"colour_random\"></block>\\n' + '    <block type=\"colour_rgb\">\\n' + '      <value name=\"RED\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">100</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"GREEN\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">50</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"BLUE\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">0</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + '    <block type=\"colour_blend\">\\n' + '      <value name=\"COLOUR1\">\\n' + '        <shadow type=\"colour_picker\">\\n' + '          <field name=\"COLOUR\">#ff0000</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"COLOUR2\">\\n' + '        <shadow type=\"colour_picker\">\\n' + '          <field name=\"COLOUR\">#3333ff</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + '      <value name=\"RATIO\">\\n' + '        <shadow type=\"math_number\">\\n' + '          <field name=\"NUM\">0.5</field>\\n' + \"        </shadow>\\n\" + \"      </value>\\n\" + \"    </block>\\n\" + \"  </category>\\n\" + \"  <sep></sep>\\n\" + '  <category name=\"Custom Button\" colour=\"#A6745C\">\\n' + '    <button text=\"A button\" callbackKey=\"myFirstButtonPressed\"></button>\\n' + \"  </category>\\n\" + '  <category name=\"Variables\" colour=\"#A65C81\" custom=\"VARIABLE\"></category>\\n' + '  <category name=\"Functions\" colour=\"#9A5CA6\" custom=\"PROCEDURE\"></category>\\n' + \"</xml>\";\nconst INITIAL_TOOLBOX_CATEGORIES = [\n    {\n        name: \"Controls\",\n        blocks: [\n            {\n                type: \"controls_if\"\n            },\n            {\n                type: \"controls_repeat_ext\",\n                values: {\n                    TIMES: {\n                        type: \"math_number\",\n                        shadow: true,\n                        fields: {\n                            NUM: 10\n                        }\n                    }\n                },\n                statements: {\n                    DO: {\n                        type: \"text_print\",\n                        shadow: true,\n                        values: {\n                            TEXT: {\n                                type: \"text\",\n                                shadow: true,\n                                fields: {\n                                    TEXT: \"abc\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        ]\n    },\n    {\n        name: \"Text\",\n        blocks: [\n            {\n                type: \"text\"\n            },\n            {\n                type: \"text_print\",\n                values: {\n                    TEXT: {\n                        type: \"text\",\n                        shadow: true,\n                        fields: {\n                            TEXT: \"abc\"\n                        }\n                    }\n                }\n            }\n        ]\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/components/blockly/toolBoxCategory.ts\n");

/***/ }),

/***/ "./client/components/utils/blockly/blockly.ts":
/*!****************************************************!*\
  !*** ./client/components/utils/blockly/blockly.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"moveDownBlock\": () => (/* binding */ moveDownBlock),\n/* harmony export */   \"moveLeftBlock\": () => (/* binding */ moveLeftBlock),\n/* harmony export */   \"moveRightBlock\": () => (/* binding */ moveRightBlock),\n/* harmony export */   \"moveUpBlock\": () => (/* binding */ moveUpBlock),\n/* harmony export */   \"setInterpreter\": () => (/* binding */ setInterpreter),\n/* harmony export */   \"waitForSecondsBlock\": () => (/* binding */ waitForSecondsBlock)\n/* harmony export */ });\n/* harmony import */ var client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client/definitions/blockly */ \"./client/definitions/blockly/index.ts\");\n\nconst setInterpreter = (interpreter, wrapper, globalObject, funtionName)=>{\n    interpreter.setProperty(globalObject, funtionName, interpreter.createNativeFunction(wrapper));\n};\nconst keyBoardEvent = (keyboardEvent, keyCodes)=>{\n    return window.dispatchEvent(new KeyboardEvent(keyboardEvent, {\n        keyCode: keyCodes\n    })); // Custom keyboard right key\n};\nconst moveRightBlock = (interpreter, globalObject)=>{\n    const wrapper = function() {\n        return keyBoardEvent(client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.EVENTS.KEYBOARD_EVENT, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.KEY_CODE.RIGHT);\n    };\n    setInterpreter(interpreter, wrapper, globalObject, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.MOVEMENT_BLOCKS.MOVE_RIGHT);\n};\nconst moveLeftBlock = (interpreter, globalObject)=>{\n    const wrapper = function() {\n        return keyBoardEvent(client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.EVENTS.KEYBOARD_EVENT, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.KEY_CODE.LEFT);\n    };\n    setInterpreter(interpreter, wrapper, globalObject, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.MOVEMENT_BLOCKS.MOVE_LEFT);\n};\nconst moveUpBlock = (interpreter, globalObject)=>{\n    const wrapper = function() {\n        return keyBoardEvent(client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.EVENTS.KEYBOARD_EVENT, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.KEY_CODE.UP);\n    };\n    setInterpreter(interpreter, wrapper, globalObject, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.MOVEMENT_BLOCKS.MOVE_UP);\n};\nconst moveDownBlock = (interpreter, globalObject)=>{\n    const wrapper = function() {\n        return keyBoardEvent(client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.EVENTS.KEYBOARD_EVENT, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.KEY_CODE.DOWN);\n    };\n    setInterpreter(interpreter, wrapper, globalObject, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.MOVEMENT_BLOCKS.MOVE_DOWN);\n};\nconst waitForSecondsBlock = (interpreter, globalObject)=>{\n    const wrapper = function(timeInSeconds, callback) {\n        // Delay the call to the callback.\n        setTimeout(callback, timeInSeconds * 1000);\n    };\n    setInterpreter(interpreter, wrapper, globalObject, client_definitions_blockly__WEBPACK_IMPORTED_MODULE_0__.CONTROL_BLOCKS.WAIT_FOR_SECONDS);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvY29tcG9uZW50cy91dGlscy9ibG9ja2x5L2Jsb2NrbHkudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErRjtBQUV4RixNQUFNSSxpQkFBaUIsQ0FBQ0MsYUFBa0JDLFNBQWNDLGNBQW1CQyxjQUF3QjtJQUN0R0gsWUFBWUksV0FBVyxDQUFDRixjQUFjQyxhQUNsQ0gsWUFBWUssb0JBQW9CLENBQUNKO0FBQ3pDLEVBQUM7QUFFRCxNQUFNSyxnQkFBZ0IsQ0FBQ0MsZUFBdUJDLFdBQXFCO0lBQy9ELE9BQU9DLE9BQU9DLGFBQWEsQ0FBQyxJQUFJQyxjQUFjSixlQUFlO1FBQUVLLFNBQVNKO0lBQVUsS0FBSyw0QkFBNEI7QUFDdkg7QUFFTyxNQUFNSyxpQkFBaUIsQ0FBQ2IsYUFBa0JFLGVBQXNCO0lBQ25FLE1BQU1ELFVBQVUsV0FBWTtRQUN4QixPQUFPSyxjQUFjViw2RUFBcUIsRUFBRUQsc0VBQWM7SUFDOUQ7SUFDQUksZUFBZUMsYUFBYUMsU0FBU0MsY0FBY0wsa0ZBQTBCO0FBRWpGLEVBQUM7QUFDTSxNQUFNb0IsZ0JBQWdCLENBQUNqQixhQUFrQkUsZUFBc0I7SUFDbEUsTUFBTUQsVUFBVSxXQUFZO1FBQ3hCLE9BQU9LLGNBQWNWLDZFQUFxQixFQUFFRCxxRUFBYTtJQUM3RDtJQUNBSSxlQUFlQyxhQUFhQyxTQUFTQyxjQUFjTCxpRkFBeUI7QUFDaEYsRUFBQztBQUNNLE1BQU11QixjQUFjLENBQUNwQixhQUFrQkUsZUFBc0I7SUFDaEUsTUFBTUQsVUFBVSxXQUFZO1FBQ3hCLE9BQU9LLGNBQWNWLDZFQUFxQixFQUFFRCxtRUFBVztJQUMzRDtJQUNBSSxlQUFlQyxhQUFhQyxTQUFTQyxjQUFjTCwrRUFBdUI7QUFDOUUsRUFBQztBQUNNLE1BQU0wQixnQkFBZ0IsQ0FBQ3ZCLGFBQWtCRSxlQUFzQjtJQUNsRSxNQUFNRCxVQUFVLFdBQVk7UUFDeEIsT0FBT0ssY0FBY1YsNkVBQXFCLEVBQUVELHFFQUFhO0lBQzdEO0lBQ0FJLGVBQWVDLGFBQWFDLFNBQVNDLGNBQWNMLGlGQUF5QjtBQUNoRixFQUFDO0FBRU0sTUFBTTZCLHNCQUFzQixDQUFDMUIsYUFBa0JFLGVBQXNCO0lBRXhFLE1BQU1ELFVBQVUsU0FBVTBCLGFBQWtCLEVBQUVDLFFBQWEsRUFBRTtRQUN6RCxrQ0FBa0M7UUFDbENDLFdBQVdELFVBQVVELGdCQUFnQjtJQUN6QztJQUNBNUIsZUFBZUMsYUFBYUMsU0FBU0MsY0FBY0osdUZBQStCO0FBRXRGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LXRlc3RpbmcvLi9jbGllbnQvY29tcG9uZW50cy91dGlscy9ibG9ja2x5L2Jsb2NrbHkudHM/ZDRjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLRVlfQ09ERSwgRVZFTlRTLCBNT1ZFTUVOVF9CTE9DS1MsIENPTlRST0xfQkxPQ0tTIH0gZnJvbSBcImNsaWVudC9kZWZpbml0aW9ucy9ibG9ja2x5XCI7XHJcblxyXG5leHBvcnQgY29uc3Qgc2V0SW50ZXJwcmV0ZXIgPSAoaW50ZXJwcmV0ZXI6IGFueSwgd3JhcHBlcjogYW55LCBnbG9iYWxPYmplY3Q6IGFueSwgZnVudGlvbk5hbWU6IHN0cmluZykgPT4ge1xyXG4gICAgaW50ZXJwcmV0ZXIuc2V0UHJvcGVydHkoZ2xvYmFsT2JqZWN0LCBmdW50aW9uTmFtZSxcclxuICAgICAgICBpbnRlcnByZXRlci5jcmVhdGVOYXRpdmVGdW5jdGlvbih3cmFwcGVyKSk7XHJcbn1cclxuXHJcbmNvbnN0IGtleUJvYXJkRXZlbnQgPSAoa2V5Ym9hcmRFdmVudDogc3RyaW5nLCBrZXlDb2RlczogbnVtYmVyKSA9PiB7XHJcbiAgICByZXR1cm4gd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEtleWJvYXJkRXZlbnQoa2V5Ym9hcmRFdmVudCwgeyBrZXlDb2RlOiBrZXlDb2RlcywgfSkpOyAvLyBDdXN0b20ga2V5Ym9hcmQgcmlnaHQga2V5XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBtb3ZlUmlnaHRCbG9jayA9IChpbnRlcnByZXRlcjogYW55LCBnbG9iYWxPYmplY3Q6IGFueSkgPT4ge1xyXG4gICAgY29uc3Qgd3JhcHBlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ga2V5Qm9hcmRFdmVudChFVkVOVFMuS0VZQk9BUkRfRVZFTlQsIEtFWV9DT0RFLlJJR0hUKVxyXG4gICAgfTtcclxuICAgIHNldEludGVycHJldGVyKGludGVycHJldGVyLCB3cmFwcGVyLCBnbG9iYWxPYmplY3QsIE1PVkVNRU5UX0JMT0NLUy5NT1ZFX1JJR0hUKVxyXG5cclxufVxyXG5leHBvcnQgY29uc3QgbW92ZUxlZnRCbG9jayA9IChpbnRlcnByZXRlcjogYW55LCBnbG9iYWxPYmplY3Q6IGFueSkgPT4ge1xyXG4gICAgY29uc3Qgd3JhcHBlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ga2V5Qm9hcmRFdmVudChFVkVOVFMuS0VZQk9BUkRfRVZFTlQsIEtFWV9DT0RFLkxFRlQpXHJcbiAgICB9O1xyXG4gICAgc2V0SW50ZXJwcmV0ZXIoaW50ZXJwcmV0ZXIsIHdyYXBwZXIsIGdsb2JhbE9iamVjdCwgTU9WRU1FTlRfQkxPQ0tTLk1PVkVfTEVGVClcclxufVxyXG5leHBvcnQgY29uc3QgbW92ZVVwQmxvY2sgPSAoaW50ZXJwcmV0ZXI6IGFueSwgZ2xvYmFsT2JqZWN0OiBhbnkpID0+IHtcclxuICAgIGNvbnN0IHdyYXBwZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIGtleUJvYXJkRXZlbnQoRVZFTlRTLktFWUJPQVJEX0VWRU5ULCBLRVlfQ09ERS5VUClcclxuICAgIH07XHJcbiAgICBzZXRJbnRlcnByZXRlcihpbnRlcnByZXRlciwgd3JhcHBlciwgZ2xvYmFsT2JqZWN0LCBNT1ZFTUVOVF9CTE9DS1MuTU9WRV9VUClcclxufVxyXG5leHBvcnQgY29uc3QgbW92ZURvd25CbG9jayA9IChpbnRlcnByZXRlcjogYW55LCBnbG9iYWxPYmplY3Q6IGFueSkgPT4ge1xyXG4gICAgY29uc3Qgd3JhcHBlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4ga2V5Qm9hcmRFdmVudChFVkVOVFMuS0VZQk9BUkRfRVZFTlQsIEtFWV9DT0RFLkRPV04pXHJcbiAgICB9O1xyXG4gICAgc2V0SW50ZXJwcmV0ZXIoaW50ZXJwcmV0ZXIsIHdyYXBwZXIsIGdsb2JhbE9iamVjdCwgTU9WRU1FTlRfQkxPQ0tTLk1PVkVfRE9XTilcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHdhaXRGb3JTZWNvbmRzQmxvY2sgPSAoaW50ZXJwcmV0ZXI6IGFueSwgZ2xvYmFsT2JqZWN0OiBhbnkpID0+IHtcclxuXHJcbiAgICBjb25zdCB3cmFwcGVyID0gZnVuY3Rpb24gKHRpbWVJblNlY29uZHM6IGFueSwgY2FsbGJhY2s6IGFueSkge1xyXG4gICAgICAgIC8vIERlbGF5IHRoZSBjYWxsIHRvIHRoZSBjYWxsYmFjay5cclxuICAgICAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCB0aW1lSW5TZWNvbmRzICogMTAwMCk7XHJcbiAgICB9O1xyXG4gICAgc2V0SW50ZXJwcmV0ZXIoaW50ZXJwcmV0ZXIsIHdyYXBwZXIsIGdsb2JhbE9iamVjdCwgQ09OVFJPTF9CTE9DS1MuV0FJVF9GT1JfU0VDT05EUylcclxuXHJcbn0iXSwibmFtZXMiOlsiS0VZX0NPREUiLCJFVkVOVFMiLCJNT1ZFTUVOVF9CTE9DS1MiLCJDT05UUk9MX0JMT0NLUyIsInNldEludGVycHJldGVyIiwiaW50ZXJwcmV0ZXIiLCJ3cmFwcGVyIiwiZ2xvYmFsT2JqZWN0IiwiZnVudGlvbk5hbWUiLCJzZXRQcm9wZXJ0eSIsImNyZWF0ZU5hdGl2ZUZ1bmN0aW9uIiwia2V5Qm9hcmRFdmVudCIsImtleWJvYXJkRXZlbnQiLCJrZXlDb2RlcyIsIndpbmRvdyIsImRpc3BhdGNoRXZlbnQiLCJLZXlib2FyZEV2ZW50Iiwia2V5Q29kZSIsIm1vdmVSaWdodEJsb2NrIiwiS0VZQk9BUkRfRVZFTlQiLCJSSUdIVCIsIk1PVkVfUklHSFQiLCJtb3ZlTGVmdEJsb2NrIiwiTEVGVCIsIk1PVkVfTEVGVCIsIm1vdmVVcEJsb2NrIiwiVVAiLCJNT1ZFX1VQIiwibW92ZURvd25CbG9jayIsIkRPV04iLCJNT1ZFX0RPV04iLCJ3YWl0Rm9yU2Vjb25kc0Jsb2NrIiwidGltZUluU2Vjb25kcyIsImNhbGxiYWNrIiwic2V0VGltZW91dCIsIldBSVRfRk9SX1NFQ09ORFMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/components/utils/blockly/blockly.ts\n");

/***/ }),

/***/ "./client/components/utils/blockly/maze.js":
/*!*************************************************!*\
  !*** ./client/components/utils/blockly/maze.js ***!
  \*************************************************/
/***/ (() => {

eval("if (false) { var makeMaze, difficulty, cellSize, maze, draw, player, finishSprite, sprite, ctx, mazeCanvas, Player, DrawMaze, Maze, toggleVisablity, displayVictoryMess, changeBrightness, shuffle, rand; }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./client/components/utils/blockly/maze.js\n");

/***/ }),

/***/ "./client/definitions/blockly/index.ts":
/*!*********************************************!*\
  !*** ./client/definitions/blockly/index.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTROL_BLOCKS\": () => (/* binding */ CONTROL_BLOCKS),\n/* harmony export */   \"DIFFICULTY\": () => (/* binding */ DIFFICULTY),\n/* harmony export */   \"EVENTS\": () => (/* binding */ EVENTS),\n/* harmony export */   \"HIGHLIGHT_BLOCKS\": () => (/* binding */ HIGHLIGHT_BLOCKS),\n/* harmony export */   \"KEY_CODE\": () => (/* binding */ KEY_CODE),\n/* harmony export */   \"MAX_BLOCKS\": () => (/* binding */ MAX_BLOCKS),\n/* harmony export */   \"MOVEMENT_BLOCKS\": () => (/* binding */ MOVEMENT_BLOCKS)\n/* harmony export */ });\nvar KEY_CODE;\n(function(KEY_CODE) {\n    KEY_CODE[KEY_CODE[\"RIGHT\"] = 139] = \"RIGHT\";\n    KEY_CODE[KEY_CODE[\"LEFT\"] = 137] = \"LEFT\";\n    KEY_CODE[KEY_CODE[\"UP\"] = 138] = \"UP\";\n    KEY_CODE[KEY_CODE[\"DOWN\"] = 140] = \"DOWN\";\n})(KEY_CODE || (KEY_CODE = {}));\nvar EVENTS;\n(function(EVENTS) {\n    EVENTS[\"KEYBOARD_EVENT\"] = \"keydown\";\n})(EVENTS || (EVENTS = {}));\nconst DIFFICULTY = [\n    {\n        LEVEL: \"Easy\",\n        DIFFICULTY_NUMBER: 10\n    },\n    {\n        LEVEL: \"Medium\",\n        DIFFICULTY_NUMBER: 15\n    },\n    {\n        LEVEL: \"Hard\",\n        DIFFICULTY_NUMBER: 25\n    },\n    {\n        LEVEL: \"Extreme\",\n        DIFFICULTY_NUMBER: 38\n    }\n];\nvar MAX_BLOCKS;\n(function(MAX_BLOCKS) {\n    MAX_BLOCKS[MAX_BLOCKS[\"STARTING_BLOCKS\"] = 33] = \"STARTING_BLOCKS\";\n    MAX_BLOCKS[MAX_BLOCKS[\"INFINITE_BLOCKS\"] = 1000] = \"INFINITE_BLOCKS\";\n    MAX_BLOCKS[MAX_BLOCKS[\"NO_BLOCKS\"] = -1] = \"NO_BLOCKS\";\n})(MAX_BLOCKS || (MAX_BLOCKS = {}));\nvar HIGHLIGHT_BLOCKS;\n(function(HIGHLIGHT_BLOCKS) {\n    HIGHLIGHT_BLOCKS[\"HIGHLIGHT_BLOCK\"] = \"highlightBlock\";\n})(HIGHLIGHT_BLOCKS || (HIGHLIGHT_BLOCKS = {}));\nvar MOVEMENT_BLOCKS;\n(function(MOVEMENT_BLOCKS) {\n    MOVEMENT_BLOCKS[\"MOVE_RIGHT\"] = \"rightMovement\";\n    MOVEMENT_BLOCKS[\"MOVE_LEFT\"] = \"leftMovement\";\n    MOVEMENT_BLOCKS[\"MOVE_UP\"] = \"upMovement\";\n    MOVEMENT_BLOCKS[\"MOVE_DOWN\"] = \"downMovement\";\n})(MOVEMENT_BLOCKS || (MOVEMENT_BLOCKS = {}));\nvar CONTROL_BLOCKS;\n(function(CONTROL_BLOCKS) {\n    CONTROL_BLOCKS[\"WAIT_FOR_SECONDS\"] = \"waitForSeconds\";\n})(CONTROL_BLOCKS || (CONTROL_BLOCKS = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvZGVmaW5pdGlvbnMvYmxvY2tseS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQU87VUFBS0EsUUFBUTtJQUFSQSxTQUFBQSxTQUNSQyxXQUFRLE9BQVJBO0lBRFFELFNBQUFBLFNBRVJFLFVBQU8sT0FBUEE7SUFGUUYsU0FBQUEsU0FHUkcsUUFBSyxPQUFMQTtJQUhRSCxTQUFBQSxTQUlSSSxVQUFPLE9BQVBBO0dBSlFKLGFBQUFBO0lBTUw7VUFBS0ssTUFBTTtJQUFOQSxPQUNSQyxvQkFBaUI7R0FEVEQsV0FBQUE7QUFJTCxNQUFNRSxhQUFhO0lBQ3RCO1FBQ0lDLE9BQU87UUFDUEMsbUJBQW1CO0lBQ3ZCO0lBQ0E7UUFDSUQsT0FBTztRQUNQQyxtQkFBbUI7SUFDdkI7SUFDQTtRQUNJRCxPQUFPO1FBQ1BDLG1CQUFtQjtJQUN2QjtJQUNBO1FBQ0lELE9BQU87UUFDUEMsbUJBQW1CO0lBQ3ZCO0NBQ0gsQ0FBQztJQUVLO1VBQUtDLFVBQVU7SUFBVkEsV0FBQUEsV0FDUkMscUJBQWtCLE1BQWxCQTtJQURRRCxXQUFBQSxXQUVSRSxxQkFBa0IsUUFBbEJBO0lBRlFGLFdBQUFBLFdBR1JHLGVBQUFBLE1BQUFBO0dBSFFILGVBQUFBO0lBTUw7VUFBS0ksZ0JBQWdCO0lBQWhCQSxpQkFDUkMscUJBQWtCO0dBRFZELHFCQUFBQTtJQUlMO1VBQUtFLGVBQWU7SUFBZkEsZ0JBQ1JDLGdCQUFhO0lBRExELGdCQUVSRSxlQUFZO0lBRkpGLGdCQUdSRyxhQUFVO0lBSEZILGdCQUlSSSxlQUFZO0dBSkpKLG9CQUFBQTtJQU1MO1VBQUtLLGNBQWM7SUFBZEEsZUFDUkMsc0JBQW1CO0dBRFhELG1CQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrbHktdGVzdGluZy8uL2NsaWVudC9kZWZpbml0aW9ucy9ibG9ja2x5L2luZGV4LnRzP2ExZGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gS0VZX0NPREUge1xyXG4gICAgUklHSFQgPSAxMzksXHJcbiAgICBMRUZUID0gMTM3LFxyXG4gICAgVVAgPSAxMzgsXHJcbiAgICBET1dOID0gMTQwLFxyXG59XHJcbmV4cG9ydCBlbnVtIEVWRU5UUyB7XHJcbiAgICBLRVlCT0FSRF9FVkVOVCA9ICdrZXlkb3duJyxcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IERJRkZJQ1VMVFkgPSBbXHJcbiAgICB7XHJcbiAgICAgICAgTEVWRUw6ICdFYXN5JyxcclxuICAgICAgICBESUZGSUNVTFRZX05VTUJFUjogMTAsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIExFVkVMOiAnTWVkaXVtJyxcclxuICAgICAgICBESUZGSUNVTFRZX05VTUJFUjogMTUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIExFVkVMOiAnSGFyZCcsXHJcbiAgICAgICAgRElGRklDVUxUWV9OVU1CRVI6IDI1LFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBMRVZFTDogJ0V4dHJlbWUnLFxyXG4gICAgICAgIERJRkZJQ1VMVFlfTlVNQkVSOiAzOCxcclxuICAgIH0sXHJcbl07XHJcblxyXG5leHBvcnQgZW51bSBNQVhfQkxPQ0tTIHtcclxuICAgIFNUQVJUSU5HX0JMT0NLUyA9IDMzLFxyXG4gICAgSU5GSU5JVEVfQkxPQ0tTID0gMTAwMCxcclxuICAgIE5PX0JMT0NLUyA9IC0xLFxyXG59XHJcblxyXG5leHBvcnQgZW51bSBISUdITElHSFRfQkxPQ0tTIHtcclxuICAgIEhJR0hMSUdIVF9CTE9DSyA9ICdoaWdobGlnaHRCbG9jaycsXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIE1PVkVNRU5UX0JMT0NLUyB7XHJcbiAgICBNT1ZFX1JJR0hUID0gJ3JpZ2h0TW92ZW1lbnQnLFxyXG4gICAgTU9WRV9MRUZUID0gJ2xlZnRNb3ZlbWVudCcsXHJcbiAgICBNT1ZFX1VQID0gJ3VwTW92ZW1lbnQnLFxyXG4gICAgTU9WRV9ET1dOID0gJ2Rvd25Nb3ZlbWVudCcsXHJcbn1cclxuZXhwb3J0IGVudW0gQ09OVFJPTF9CTE9DS1Mge1xyXG4gICAgV0FJVF9GT1JfU0VDT05EUyA9ICd3YWl0Rm9yU2Vjb25kcycsXHJcbn1cclxuIl0sIm5hbWVzIjpbIktFWV9DT0RFIiwiUklHSFQiLCJMRUZUIiwiVVAiLCJET1dOIiwiRVZFTlRTIiwiS0VZQk9BUkRfRVZFTlQiLCJESUZGSUNVTFRZIiwiTEVWRUwiLCJESUZGSUNVTFRZX05VTUJFUiIsIk1BWF9CTE9DS1MiLCJTVEFSVElOR19CTE9DS1MiLCJJTkZJTklURV9CTE9DS1MiLCJOT19CTE9DS1MiLCJISUdITElHSFRfQkxPQ0tTIiwiSElHSExJR0hUX0JMT0NLIiwiTU9WRU1FTlRfQkxPQ0tTIiwiTU9WRV9SSUdIVCIsIk1PVkVfTEVGVCIsIk1PVkVfVVAiLCJNT1ZFX0RPV04iLCJDT05UUk9MX0JMT0NLUyIsIldBSVRfRk9SX1NFQ09ORFMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/definitions/blockly/index.ts\n");

/***/ }),

/***/ "./client/styled/common/button.ts":
/*!****************************************!*\
  !*** ./client/styled/common/button.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultButton\": () => (/* binding */ DefaultButton),\n/* harmony export */   \"GreenBorderButton\": () => (/* binding */ GreenBorderButton)\n/* harmony export */ });\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ \"styled-components\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_0__);\n// #region Global Imports\n\n// #endregion Global Imports\nconst DefaultButton = (styled_components__WEBPACK_IMPORTED_MODULE_0___default().button)`\r\n  border: none;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  background: linear-gradient(180deg, #ffffff -81.58%, rgba(255, 255, 255, 0) 76.32%), #21c466;\r\n  background-blend-mode: overlay, normal;\r\n  box-shadow: 0px 2px 0px rgba(0, 0, 0, 0.25);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  max-width: 160px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  &:hover {\r\n    background-color: #21c466;\r\n  }\r\n  button {\r\n    &[disabled] {\r\n      border: 1px solid #cccccc;\r\n      background-color: #cccccc;\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n  .resetPassword {\r\n    color: #fff;\r\n  }\r\n  @media only screen and (max-width: 575px) {\r\n    .resetPassword {\r\n      font-size: 13px;\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\nconst GreenBorderButton = (styled_components__WEBPACK_IMPORTED_MODULE_0___default().button)`\r\n  border: 2px solid #21c466;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  background: #ffffff;\r\n  color: #21c466;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 15px;\r\n  padding: 12px 20px;\r\n  text-transform: uppercase;\r\n  &:hover {\r\n    background-color: #21c466;\r\n    color: #ffffff;\r\n  }\r\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jbGllbnQvc3R5bGVkL2NvbW1vbi9idXR0b24udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHlCQUF5QjtBQUNjO0FBQ3ZDLDRCQUE0QjtBQUVyQixNQUFNQyxnQkFBZ0JELGlFQUFhLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlDM0MsQ0FBQyxDQUFDO0FBQ0ssTUFBTUcsb0JBQW9CSCxpRUFBYSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0IvQyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LXRlc3RpbmcvLi9jbGllbnQvc3R5bGVkL2NvbW1vbi9idXR0b24udHM/NDFjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjcmVnaW9uIEdsb2JhbCBJbXBvcnRzXHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG4vLyAjZW5kcmVnaW9uIEdsb2JhbCBJbXBvcnRzXHJcblxyXG5leHBvcnQgY29uc3QgRGVmYXVsdEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2ZmZmZmZiAtODEuNTglLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIDc2LjMyJSksICMyMWM0NjY7XHJcbiAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBvdmVybGF5LCBub3JtYWw7XHJcbiAgYm94LXNoYWRvdzogMHB4IDJweCAwcHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIG1heC13aWR0aDogMTYwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjFjNDY2O1xyXG4gIH1cclxuICBidXR0b24ge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjY2NjO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjY2NjO1xyXG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gICAgfVxyXG4gIH1cclxuICAucmVzZXRQYXNzd29yZCB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xyXG4gICAgLnJlc2V0UGFzc3dvcmQge1xyXG4gICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuZXhwb3J0IGNvbnN0IEdyZWVuQm9yZGVyQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcclxuICBib3JkZXI6IDJweCBzb2xpZCAjMjFjNDY2O1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XHJcbiAgY29sb3I6ICMyMWM0NjY7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBsaW5lLWhlaWdodDogMTVweDtcclxuICBwYWRkaW5nOiAxMnB4IDIwcHg7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAmOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMWM0NjY7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICB9XHJcbmA7XHJcbiJdLCJuYW1lcyI6WyJzdHlsZWQiLCJEZWZhdWx0QnV0dG9uIiwiYnV0dG9uIiwiR3JlZW5Cb3JkZXJCdXR0b24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./client/styled/common/button.ts\n");

/***/ }),

/***/ "./pages/blockly/index.tsx":
/*!*********************************!*\
  !*** ./pages/blockly/index.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var client_components_blockly__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! client/components/blockly */ \"./client/components/blockly/index.tsx\");\n// #region global imports\n\n\n// #endregion global imports\n// #region local imports\n\n// import { PageLayout } from 'client/components/app/pageLayout';\n// #endregion local imports\n// import 'public/static/css/style'\n// #region interfaces imports\n// import { ReduxNextPageContext } from 'client/interfaces';\n// #endregion interfaces imports\nconst BlocklyPage = (props)=>{\n    return(// <PageLayout>\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(client_components_blockly__WEBPACK_IMPORTED_MODULE_2__.BlocklyWorkspace, {\n        ...props\n    }, void 0, false, {\n        fileName: \"F:\\\\fresh-app\\\\blockly-testing\\\\pages\\\\blockly\\\\index.tsx\",\n        lineNumber: 18,\n        columnNumber: 13\n    }, undefined));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BlocklyPage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9ibG9ja2x5L2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSx5QkFBeUI7O0FBQ0M7QUFFMUIsNEJBQTRCO0FBRTVCLHdCQUF3QjtBQUNxQztBQUM3RCxpRUFBaUU7QUFDakUsMkJBQTJCO0FBQzNCLG1DQUFtQztBQUNuQyw2QkFBNkI7QUFDN0IsNERBQTREO0FBQzVELGdDQUFnQztBQUVoQyxNQUFNRSxjQUE2QkMsQ0FBQUEsUUFBUztJQUN4QyxPQUNJLGVBQWU7a0JBQ1gsOERBQUNGLHVFQUFnQkE7UUFBRSxHQUFHRSxLQUFLOzs7Ozs7QUFHdkM7QUFFQSxpRUFBZUQsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrbHktdGVzdGluZy8uL3BhZ2VzL2Jsb2NrbHkvaW5kZXgudHN4PzViNTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gI3JlZ2lvbiBnbG9iYWwgaW1wb3J0c1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBOZXh0UGFnZSB9IGZyb20gJ25leHQnO1xyXG4vLyAjZW5kcmVnaW9uIGdsb2JhbCBpbXBvcnRzXHJcblxyXG4vLyAjcmVnaW9uIGxvY2FsIGltcG9ydHNcclxuaW1wb3J0IHsgQmxvY2tseVdvcmtzcGFjZSB9IGZyb20gJ2NsaWVudC9jb21wb25lbnRzL2Jsb2NrbHknO1xyXG4vLyBpbXBvcnQgeyBQYWdlTGF5b3V0IH0gZnJvbSAnY2xpZW50L2NvbXBvbmVudHMvYXBwL3BhZ2VMYXlvdXQnO1xyXG4vLyAjZW5kcmVnaW9uIGxvY2FsIGltcG9ydHNcclxuLy8gaW1wb3J0ICdwdWJsaWMvc3RhdGljL2Nzcy9zdHlsZSdcclxuLy8gI3JlZ2lvbiBpbnRlcmZhY2VzIGltcG9ydHNcclxuLy8gaW1wb3J0IHsgUmVkdXhOZXh0UGFnZUNvbnRleHQgfSBmcm9tICdjbGllbnQvaW50ZXJmYWNlcyc7XHJcbi8vICNlbmRyZWdpb24gaW50ZXJmYWNlcyBpbXBvcnRzXHJcblxyXG5jb25zdCBCbG9ja2x5UGFnZTogTmV4dFBhZ2U8YW55PiA9IHByb3BzID0+IHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgLy8gPFBhZ2VMYXlvdXQ+XHJcbiAgICAgICAgICAgIDxCbG9ja2x5V29ya3NwYWNlIHsuLi5wcm9wc30gLz5cclxuICAgICAgICAvLyB7LyogPC9QYWdlTGF5b3V0PiAqL31cclxuICAgICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCbG9ja2x5UGFnZTtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQmxvY2tseVdvcmtzcGFjZSIsIkJsb2NrbHlQYWdlIiwicHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/blockly/index.tsx\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"react\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2x5LXRlc3RpbmcvLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzPzU3NzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "@blockly/theme-dark":
/*!**************************************!*\
  !*** external "@blockly/theme-dark" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = require("@blockly/theme-dark");

/***/ }),

/***/ "blockly":
/*!**************************!*\
  !*** external "blockly" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("blockly");

/***/ }),

/***/ "blockly/javascript":
/*!*************************************!*\
  !*** external "blockly/javascript" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("blockly/javascript");

/***/ }),

/***/ "blockly/javascript_compressed":
/*!************************************************!*\
  !*** external "blockly/javascript_compressed" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("blockly/javascript_compressed");

/***/ }),

/***/ "blockly/msg/en.js":
/*!************************************!*\
  !*** external "blockly/msg/en.js" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("blockly/msg/en.js");

/***/ }),

/***/ "blockly/python":
/*!*********************************!*\
  !*** external "blockly/python" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("blockly/python");

/***/ }),

/***/ "js-interpreter":
/*!*********************************!*\
  !*** external "js-interpreter" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("js-interpreter");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "styled-components":
/*!************************************!*\
  !*** external "styled-components" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("styled-components");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/blockly/index.tsx"));
module.exports = __webpack_exports__;

})();